{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KARTIK\\\\Downloads\\\\NewsMonkey--React-master\\\\src\\\\components\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NewsItem from './NewsItem';\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst News = props => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const fetchNews = async (pageNumber = 1) => {\n    props.setProgress(10);\n    const url = \"https://google.serper.dev/news\";\n    const apiKey = process.env.REACT_APP_SERPER_API;\n    if (!apiKey) {\n      console.error(\"API key is missing. Please check your .env file.\");\n      return;\n    }\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-API-KEY\": apiKey\n      },\n      body: JSON.stringify({\n        q: props.category,\n        num: props.pageSize,\n        // Number of results per request\n        page: pageNumber\n      }) // Search by category\n    };\n    setLoading(true);\n    try {\n      const response = await fetch(url, options);\n      props.setProgress(30);\n      const data = await response.json();\n      props.setProgress(70);\n      console.log(\"Fetched News Data:\", data);\n      if (data.news) {\n        setArticles(prevArticles => pageNumber === 1 ? data.news : [...prevArticles, ...data.news]);\n        setTotalResults(data.news.length);\n        setPage(pageNumber);\n      }\n    } catch (error) {\n      console.error(\"Error fetching news:\", error);\n    }\n    setLoading(false);\n    props.setProgress(100);\n  };\n\n  // const updateNews = async ()=> {\n  //     props.setProgress(10);\n  //     const url = `https://google.serper.dev/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`; \n  //     setLoading(true)\n  //     let data = await fetch(url);\n  //     props.setProgress(30);\n  //     let parsedData = await data.json()\n  //     props.setProgress(70);\n  //     setArticles(parsedData.articles)\n  //     setTotalResults(parsedData.totalResults)\n  //     setLoading(false)\n  //     props.setProgress(100);\n  // }\n\n  useEffect(() => {\n    document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n    // updateNews(); \n    // eslint-disable-next-line\n    fetchNews(1);\n  }, [props.category]);\n  const fetchMoreData = async () => {\n    // setPage(page + 1);\n    await fetchNews(page + 1);\n  };\n\n  // const fetchMoreData = async () => {   \n  //     const url = `https://google.serper.dev/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page+1}&pageSize=${props.pageSize}`;\n  //     setPage(page+1) \n  //     let data = await fetch(url);\n  //     let parsedData = await data.json()\n  //     setArticles(articles.concat(parsedData.articles))\n  //     setTotalResults(parsedData.totalResults)\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      style: {\n        margin: '35px 0px',\n        marginTop: '90px'\n      },\n      children: [\"NewsMonkey - Top \", capitalizeFirstLetter(props.category), \" Headlines\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: articles.length,\n      next: fetchMoreData,\n      hasMore: articles.length !== totalResults,\n      loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: articles.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                title: element.title ? element.title : \"\",\n                description: element.description ? element.description : \"\",\n                imageUrl: element.imageUrl,\n                newsUrl: element.url,\n                author: element.author,\n                date: element.date,\n                source: element.source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)\n            }, element.url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(News, \"DJGT5z9fcO00SGn/4yt1PHL84Ps=\");\n_c = News;\nNews.defaultProps = {\n  country: 'in',\n  pageSize: 8,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string,\n  setProgress: PropTypes.func.isRequired\n};\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","NewsItem","Spinner","PropTypes","InfiniteScroll","jsxDEV","_jsxDEV","Fragment","_Fragment","News","props","_s","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","capitalizeFirstLetter","string","charAt","toUpperCase","slice","fetchNews","pageNumber","setProgress","url","apiKey","process","env","REACT_APP_SERPER_API","console","error","options","method","headers","body","JSON","stringify","q","category","num","pageSize","response","fetch","data","json","log","news","prevArticles","length","document","title","fetchMoreData","children","className","style","margin","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","next","hasMore","loader","map","element","description","imageUrl","newsUrl","author","date","source","_c","defaultProps","country","propTypes","number","func","isRequired","$RefreshReg$"],"sources":["C:/Users/KARTIK/Downloads/NewsMonkey--React-master/src/components/News.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport NewsItem from './NewsItem'\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types'\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst News = (props) => {\n    const [articles, setArticles] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [page, setPage] = useState(1)\n    const [totalResults, setTotalResults] = useState(0)\n\n    const capitalizeFirstLetter = (string) => {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n\n\n    const fetchNews = async (pageNumber = 1) => {\n\n        props.setProgress(10);\n        const url = \"https://google.serper.dev/news\";\n        const apiKey = process.env.REACT_APP_SERPER_API;\n\n        if (!apiKey) {\n            console.error(\"API key is missing. Please check your .env file.\");\n            return;\n        }\n\n\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-API-KEY\": apiKey\n            },\n            body: JSON.stringify({\n                q: props.category,\n                num: props.pageSize, // Number of results per request\n                page: pageNumber,\n            }) // Search by category\n        };\n\n        setLoading(true);\n        try {\n            const response = await fetch(url, options);\n            props.setProgress(30);\n            const data = await response.json();\n            props.setProgress(70);\n            console.log(\"Fetched News Data:\", data);\n\n            if (data.news) {\n                setArticles((prevArticles) =>\n                    pageNumber === 1 ? data.news : [...prevArticles, ...data.news]\n                );\n                setTotalResults(data.news.length);\n                setPage(pageNumber);\n            }\n\n        } catch (error) {\n            console.error(\"Error fetching news:\", error);\n        }\n        setLoading(false);\n        props.setProgress(100);\n    };\n\n\n\n    // const updateNews = async ()=> {\n    //     props.setProgress(10);\n    //     const url = `https://google.serper.dev/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`; \n    //     setLoading(true)\n    //     let data = await fetch(url);\n    //     props.setProgress(30);\n    //     let parsedData = await data.json()\n    //     props.setProgress(70);\n    //     setArticles(parsedData.articles)\n    //     setTotalResults(parsedData.totalResults)\n    //     setLoading(false)\n    //     props.setProgress(100);\n    // }\n\n\n\n\n    useEffect(() => {\n        document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n        // updateNews(); \n        // eslint-disable-next-line\n        fetchNews(1);\n    }, [props.category])\n\n\n    const fetchMoreData = async () => {\n        // setPage(page + 1);\n        await fetchNews(page + 1);\n    };\n\n    // const fetchMoreData = async () => {   \n    //     const url = `https://google.serper.dev/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page+1}&pageSize=${props.pageSize}`;\n    //     setPage(page+1) \n    //     let data = await fetch(url);\n    //     let parsedData = await data.json()\n    //     setArticles(articles.concat(parsedData.articles))\n    //     setTotalResults(parsedData.totalResults)\n    //   };\n\n    return (\n        <>\n            <h1 className=\"text-center\" style={{ margin: '35px 0px', marginTop: '90px' }}>NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines</h1>\n            {loading && <Spinner />}\n            <InfiniteScroll\n                dataLength={articles.length}\n                next={fetchMoreData}\n                hasMore={articles.length !== totalResults}\n                loader={<Spinner />}\n            >\n                <div className=\"container\">\n\n                    <div className=\"row\">\n                        {articles.map((element) => {\n                            return <div className=\"col-md-4\" key={element.url}>\n                                <NewsItem title={element.title ? element.title : \"\"}\n                                    description={element.description ? element.description : \"\"}\n                                    imageUrl={element.imageUrl}\n                                    newsUrl={element.url}\n                                    author={element.author}\n                                    date={element.date}\n                                    source={element.source} />\n                            </div>\n                        })}\n                    </div>\n                </div>\n            </InfiniteScroll>\n        </>\n    )\n\n}\n\n\nNews.defaultProps = {\n    country: 'in',\n    pageSize: 8,\n    category: 'general',\n}\n\nNews.propTypes = {\n    country: PropTypes.string,\n    pageSize: PropTypes.number,\n    category: PropTypes.string,\n    setProgress: PropTypes.func.isRequired\n\n}\n\nexport default News\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
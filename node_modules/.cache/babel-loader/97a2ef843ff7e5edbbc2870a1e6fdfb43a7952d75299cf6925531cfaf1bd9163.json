{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KARTIK\\\\Downloads\\\\NewsMonkey--React-master\\\\src\\\\components\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport NewsItem from './NewsItem';\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst News = props => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const fetchNews = useCallback(async (pageNumber = 1) => {\n    props.setProgress(10);\n    const url = 'https://google.serper.dev/news';\n    const apiKey = process.env.REACT_APP_SERPER_API;\n    if (!apiKey) {\n      console.error('API key is missing. Please check your .env file.');\n      return;\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-API-KEY': apiKey\n      },\n      body: JSON.stringify({\n        q: props.category,\n        num: props.pageSize,\n        // Number of results per request\n        page: pageNumber\n      }) // Search by category\n    };\n    setLoading(true);\n    try {\n      const response = await fetch(url, options);\n      props.setProgress(30);\n      const data = await response.json();\n      props.setProgress(70);\n      console.log('Fetched News Data:', data);\n      if (data.news) {\n        setArticles(prevArticles => pageNumber === 1 ? data.news : [...prevArticles, ...data.news]);\n\n        // Update totalResults only if it's the first page\n        if (pageNumber === 1) {\n          setTotalResults(data.news.length * 10); // Approximate max results\n        }\n        setPage(pageNumber); // Update the page state correctly\n      }\n      setLoading(false);\n      props.setProgress(100);\n    } catch (error) {\n      console.error('Error fetching news:', error);\n      setLoading(false); // Ensure loading stops even on error\n    }\n  }, [props.category, props.pageSize, props.setProgress]);\n  useEffect(() => {\n    document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n    fetchNews(1);\n  }, [fetchNews, props.category]);\n  const fetchMoreData = async () => {\n    const nextPage = page + 1;\n    console.log('Fetching more news for page:', nextPage);\n    await fetchNews(nextPage);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      style: {\n        margin: '35px 0px',\n        marginTop: '90px'\n      },\n      children: [\"Top \", capitalizeFirstLetter(props.category), \" Headlines\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: articles.length,\n      next: fetchMoreData,\n      hasMore: articles.length < totalResults // ✅ Corrected condition\n      ,\n      loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: articles.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3 col-sm-6 col-12 mb-3\",\n            children: /*#__PURE__*/_jsxDEV(NewsItem, {\n              title: element.title ? element.title : '',\n              description: element.section ? element.section : 'news',\n              imageUrl: element.imageUrl,\n              newsUrl: element.link,\n              author: element.author,\n              date: element.date,\n              source: element.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)\n          }, element.link || index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(News, \"iHUFpkNr8yw16nVcNmxxLNLsrMY=\");\n_c = News;\nNews.defaultProps = {\n  country: 'in',\n  pageSize: 8,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string,\n  setProgress: PropTypes.func.isRequired\n};\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","NewsItem","Spinner","PropTypes","InfiniteScroll","jsxDEV","_jsxDEV","Fragment","_Fragment","News","props","_s","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","capitalizeFirstLetter","string","charAt","toUpperCase","slice","fetchNews","pageNumber","setProgress","url","apiKey","process","env","REACT_APP_SERPER_API","console","error","options","method","headers","body","JSON","stringify","q","category","num","pageSize","response","fetch","data","json","log","news","prevArticles","length","document","title","fetchMoreData","nextPage","children","className","style","margin","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","next","hasMore","loader","map","element","index","description","section","imageUrl","newsUrl","link","author","date","source","_c","defaultProps","country","propTypes","number","func","isRequired","$RefreshReg$"],"sources":["C:/Users/KARTIK/Downloads/NewsMonkey--React-master/src/components/News.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport NewsItem from './NewsItem';\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nconst News = (props) => {\n    const [articles, setArticles] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(1);\n    const [totalResults, setTotalResults] = useState(0);\n\n    const capitalizeFirstLetter = (string) => {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    };\n\n    const fetchNews = useCallback(async (pageNumber = 1) => {\n        props.setProgress(10);\n        const url = 'https://google.serper.dev/news';\n        const apiKey = process.env.REACT_APP_SERPER_API;\n\n        if (!apiKey) {\n            console.error('API key is missing. Please check your .env file.');\n            return;\n        }\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-KEY': apiKey\n            },\n            body: JSON.stringify({\n                q: props.category,\n                num: props.pageSize, // Number of results per request\n                page: pageNumber\n            }) // Search by category\n        };\n\n        setLoading(true);\n        try {\n            const response = await fetch(url, options);\n            props.setProgress(30);\n            const data = await response.json();\n            props.setProgress(70);\n            console.log('Fetched News Data:', data);\n\n            if (data.news) {\n                setArticles((prevArticles) =>\n                    pageNumber === 1 ? data.news : [...prevArticles, ...data.news]\n                );\n\n                // Update totalResults only if it's the first page\n                if (pageNumber === 1) {\n                    setTotalResults(data.news.length * 10); // Approximate max results\n                }\n\n                setPage(pageNumber); // Update the page state correctly\n            }\n            setLoading(false);\n            props.setProgress(100);\n        } catch (error) {\n            console.error('Error fetching news:', error);\n            setLoading(false); // Ensure loading stops even on error\n        }\n    }, [props.category, props.pageSize, props.setProgress]);\n\n    useEffect(() => {\n        document.title = `${capitalizeFirstLetter(props.category)} - NewsMonkey`;\n        fetchNews(1);\n    }, [fetchNews, props.category]);\n\n    const fetchMoreData = async () => {\n        const nextPage = page + 1;\n        console.log('Fetching more news for page:', nextPage);\n        await fetchNews(nextPage);\n    };\n\n    return (\n        <>\n            <h1 className=\"text-center\" style={{ margin: '35px 0px', marginTop: '90px' }}>\n                Top {capitalizeFirstLetter(props.category)} Headlines\n            </h1>\n            {loading && <Spinner />}\n            <InfiniteScroll\n                dataLength={articles.length}\n                next={fetchMoreData}\n                hasMore={articles.length < totalResults} // ✅ Corrected condition\n                loader={<Spinner />}\n            >\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {articles.map((element, index) => (\n                            <div className=\"col-md-3 col-sm-6 col-12 mb-3\" key={element.link || index}>\n                                <NewsItem\n                                    title={element.title ? element.title : ''}\n                                    description={element.section ? element.section : 'news'}\n                                    imageUrl={element.imageUrl}\n                                    newsUrl={element.link}\n                                    author={element.author}\n                                    date={element.date}\n                                    source={element.source}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </InfiniteScroll>\n        </>\n    );\n};\n\nNews.defaultProps = {\n    country: 'in',\n    pageSize: 8,\n    category: 'general'\n};\n\nNews.propTypes = {\n    country: PropTypes.string,\n    pageSize: PropTypes.number,\n    category: PropTypes.string,\n    setProgress: PropTypes.func.isRequired\n};\n\nexport default News;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMqB,qBAAqB,GAAIC,MAAM,IAAK;IACtC,OAAOA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMC,SAAS,GAAGzB,WAAW,CAAC,OAAO0B,UAAU,GAAG,CAAC,KAAK;IACpDhB,KAAK,CAACiB,WAAW,CAAC,EAAE,CAAC;IACrB,MAAMC,GAAG,GAAG,gCAAgC;IAC5C,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;IAE/C,IAAI,CAACH,MAAM,EAAE;MACTI,OAAO,CAACC,KAAK,CAAC,kDAAkD,CAAC;MACjE;IACJ;IAEA,MAAMC,OAAO,GAAG;MACZC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,WAAW,EAAER;MACjB,CAAC;MACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,CAAC,EAAE/B,KAAK,CAACgC,QAAQ;QACjBC,GAAG,EAAEjC,KAAK,CAACkC,QAAQ;QAAE;QACrB5B,IAAI,EAAEU;MACV,CAAC,CAAC,CAAC;IACP,CAAC;IAEDX,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAM8B,QAAQ,GAAG,MAAMC,KAAK,CAAClB,GAAG,EAAEO,OAAO,CAAC;MAC1CzB,KAAK,CAACiB,WAAW,CAAC,EAAE,CAAC;MACrB,MAAMoB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCtC,KAAK,CAACiB,WAAW,CAAC,EAAE,CAAC;MACrBM,OAAO,CAACgB,GAAG,CAAC,oBAAoB,EAAEF,IAAI,CAAC;MAEvC,IAAIA,IAAI,CAACG,IAAI,EAAE;QACXrC,WAAW,CAAEsC,YAAY,IACrBzB,UAAU,KAAK,CAAC,GAAGqB,IAAI,CAACG,IAAI,GAAG,CAAC,GAAGC,YAAY,EAAE,GAAGJ,IAAI,CAACG,IAAI,CACjE,CAAC;;QAED;QACA,IAAIxB,UAAU,KAAK,CAAC,EAAE;UAClBP,eAAe,CAAC4B,IAAI,CAACG,IAAI,CAACE,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;QAC5C;QAEAnC,OAAO,CAACS,UAAU,CAAC,CAAC,CAAC;MACzB;MACAX,UAAU,CAAC,KAAK,CAAC;MACjBL,KAAK,CAACiB,WAAW,CAAC,GAAG,CAAC;IAC1B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CnB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACJ,CAAC,EAAE,CAACL,KAAK,CAACgC,QAAQ,EAAEhC,KAAK,CAACkC,QAAQ,EAAElC,KAAK,CAACiB,WAAW,CAAC,CAAC;EAEvD7B,SAAS,CAAC,MAAM;IACZuD,QAAQ,CAACC,KAAK,GAAG,GAAGlC,qBAAqB,CAACV,KAAK,CAACgC,QAAQ,CAAC,eAAe;IACxEjB,SAAS,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,CAACA,SAAS,EAAEf,KAAK,CAACgC,QAAQ,CAAC,CAAC;EAE/B,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,QAAQ,GAAGxC,IAAI,GAAG,CAAC;IACzBiB,OAAO,CAACgB,GAAG,CAAC,8BAA8B,EAAEO,QAAQ,CAAC;IACrD,MAAM/B,SAAS,CAAC+B,QAAQ,CAAC;EAC7B,CAAC;EAED,oBACIlD,OAAA,CAAAE,SAAA;IAAAiD,QAAA,gBACInD,OAAA;MAAIoD,SAAS,EAAC,aAAa;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,UAAU;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAJ,QAAA,GAAC,MACtE,EAACrC,qBAAqB,CAACV,KAAK,CAACgC,QAAQ,CAAC,EAAC,YAC/C;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJnD,OAAO,iBAAIR,OAAA,CAACJ,OAAO;MAAA4D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvB3D,OAAA,CAACF,cAAc;MACX8D,UAAU,EAAEtD,QAAQ,CAACwC,MAAO;MAC5Be,IAAI,EAAEZ,aAAc;MACpBa,OAAO,EAAExD,QAAQ,CAACwC,MAAM,GAAGlC,YAAa,CAAC;MAAA;MACzCmD,MAAM,eAAE/D,OAAA,CAACJ,OAAO;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAAAR,QAAA,eAEpBnD,OAAA;QAAKoD,SAAS,EAAC,WAAW;QAAAD,QAAA,eACtBnD,OAAA;UAAKoD,SAAS,EAAC,KAAK;UAAAD,QAAA,EACf7C,QAAQ,CAAC0D,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzBlE,OAAA;YAAKoD,SAAS,EAAC,+BAA+B;YAAAD,QAAA,eAC1CnD,OAAA,CAACL,QAAQ;cACLqD,KAAK,EAAEiB,OAAO,CAACjB,KAAK,GAAGiB,OAAO,CAACjB,KAAK,GAAG,EAAG;cAC1CmB,WAAW,EAAEF,OAAO,CAACG,OAAO,GAAGH,OAAO,CAACG,OAAO,GAAG,MAAO;cACxDC,QAAQ,EAAEJ,OAAO,CAACI,QAAS;cAC3BC,OAAO,EAAEL,OAAO,CAACM,IAAK;cACtBC,MAAM,EAAEP,OAAO,CAACO,MAAO;cACvBC,IAAI,EAAER,OAAO,CAACQ,IAAK;cACnBC,MAAM,EAAET,OAAO,CAACS;YAAO;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B;UAAC,GAT8CM,OAAO,CAACM,IAAI,IAAIL,KAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUpE,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA,eACnB,CAAC;AAEX,CAAC;AAACtD,EAAA,CAxGIF,IAAI;AAAAwE,EAAA,GAAJxE,IAAI;AA0GVA,IAAI,CAACyE,YAAY,GAAG;EAChBC,OAAO,EAAE,IAAI;EACbvC,QAAQ,EAAE,CAAC;EACXF,QAAQ,EAAE;AACd,CAAC;AAEDjC,IAAI,CAAC2E,SAAS,GAAG;EACbD,OAAO,EAAEhF,SAAS,CAACkB,MAAM;EACzBuB,QAAQ,EAAEzC,SAAS,CAACkF,MAAM;EAC1B3C,QAAQ,EAAEvC,SAAS,CAACkB,MAAM;EAC1BM,WAAW,EAAExB,SAAS,CAACmF,IAAI,CAACC;AAChC,CAAC;AAED,eAAe9E,IAAI;AAAC,IAAAwE,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}